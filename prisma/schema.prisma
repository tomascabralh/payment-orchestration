generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentStatus {
  PENDING
  PROCESSING
  PAID
  FAILED
}

model PaymentOrder {
  uuid            String   @id
  amount          Float
  description     String
  countryIsoCode  String
  createdAt       DateTime @default(now())
  status          PaymentStatus @default(PENDING)
  transactions    PaymentTransaction[]
}

model PaymentTransaction {
  id              Int @id @default(autoincrement())
  transactionId   String
  provider        String
  status          PaymentStatus
  amount          Float
  createdAt       DateTime @default(now())
  
  orderId         String
  order           PaymentOrder @relation(fields: [orderId], references: [uuid])

  @@index([orderId])
}

model PaymentMethod {
  id                Int      @id @default(autoincrement())
  code             String   @unique
  name             String
  supportedCountries String[]
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([code])
}

model ProviderMetric {
  id                Int      @id @default(autoincrement())
  providerCode      String   @unique
  successCount      Int      @default(0)
  failureCount      Int      @default(0)
  totalResponseTime BigInt   @default(0)
  lastUsed          DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@index([providerCode])
} 